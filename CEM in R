
library(readr)
library(readxl)
library(reshape2)
library(dplyr)
library(tidyverse)
library(MatchIt)
library(cem)
library(Zelig)

library(pacman)
library(knitr)
library(splitstackshape)
library(lubridate)
library(zoo)
library(tidyr)

#edit Pawel. intstalling 2 different packages to import SAS files;
library(sas7bdat)
library(haven)

library(bit64)

pacman::p_load(knitr, wakefield, MatchIt, tableone, captioner)


setwd("Y:/2019 RADS/CEM Using R/1. Reruning final SAS table/Data")

#edit Pawel - installing packages recomended by Michael for Data import from vertica
library(DBI)
library(RSQLite)
library(RODBC)
library(odbc)
library(dbConnect)

library(sqldf)


#!!!!!!!
#Comment PAwel: Add your credentials here

con <- dbConnect(odbc::odbc(), "Vertica-SharecareBI", username = "Pawel.Brocki", pwd = "Didbbbn8v8bSDfdnc!")



#remove memory limits so data import works
memory.size(max = TRUE)

#memory.limit(size = 4095)






#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Comment Pawel: Add or remove years that shall be pulled
#Currentyl only 2018 to 2010 are pulled
#also adjust which customer claims shall be pulled 
#Currentyl HP_BCBSNE


#1.get medclaims aggregation in R

BCBSNE_medclaims = dbGetQuery(con, "



select distinct  a.Guid, k.med_costs_2019, j.med_costs_2018, i.med_costs_2017, h.med_costs_2016, g.med_costs_2015, f.med_costs_2014, e.med_costs_2013, d.med_costs_2012, c.med_costs_2011, b.med_costs_2010
from scp.data_hub_elig a


left join (select   Guid, sum (PaidAmt) med_costs_2019
from scp.data_hub_medclaims
where dateServiceFrom >= '2019-01-01'
and dateServiceFrom < '2020-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as k
on  a.guid=k.guid

left join (select   Guid, sum (PaidAmt) med_costs_2018
from scp.data_hub_medclaims
where dateServiceFrom >= '2018-01-01'
and dateServiceFrom < '2019-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as j
on  a.guid=j.guid

left join (select  Guid,  sum (PaidAmt) med_costs_2017
from scp.data_hub_medclaims
where dateServiceFrom >= '2017-01-01'
and dateServiceFrom < '2018-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as i
on  a.guid=i.guid


left join (select  Guid,  sum (PaidAmt) med_costs_2016
from scp.data_hub_medclaims
where dateServiceFrom >= '2016-01-01'
and dateServiceFrom < '2017-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as h
on  a.guid=h.guid


left join (select  Guid,   sum (PaidAmt) med_costs_2015
from scp.data_hub_medclaims
where dateServiceFrom >= '2015-01-01'
and dateServiceFrom < '2016-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as g
on  a.guid=g.guid


left join (select  Guid,   sum (PaidAmt) med_costs_2014
from scp.data_hub_medclaims
where dateServiceFrom >= '2014-01-01'
and dateServiceFrom < '2015-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as f
on  a.guid=f.guid


left join (select  Guid,  sum (PaidAmt) med_costs_2013
from scp.data_hub_medclaims
where dateServiceFrom >= '2013-01-01'
and dateServiceFrom < '2014-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as e
on  a.guid=e.guid

left join (select   Guid,   sum (PaidAmt) med_costs_2012
from scp.data_hub_medclaims
where dateServiceFrom >= '2012-01-01'
and dateServiceFrom < '2013-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as d
on  a.guid=d.guid

left join (select  Guid,   sum (PaidAmt) med_costs_2011
from scp.data_hub_medclaims
where dateServiceFrom >= '2011-01-01'
and dateServiceFrom < '2012-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as c
on  a.guid=c.guid


left join (select  Guid,   sum (PaidAmt) med_costs_2010
from scp.data_hub_medclaims
where dateServiceFrom >= '2010-01-01'
and dateServiceFrom < '2011-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid,  memberUniqueId) as b
on  a.guid=b.guid

where a.customerID like '%HP_BCBSNE%'")








#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Comment Pawel: Add or remove years that shall be pulled
#Currentyl only 2018 to 2010 are pulled
#also adjust which customer RX claims shall be pulled 
#Currentyl HP_BCBSNE

#2.get RX medclaims


BCBSNE_RXclaims_aggregated = dbGetQuery(con, "
select distinct  a.Guid,  k.rx_costs_2019, j.rx_costs_2018, i.rx_costs_2017, h.rx_costs_2016, g.rx_costs_2015, f.rx_costs_2014, e.rx_costs_2013, d.rx_costs_2012, c.rx_costs_2011, b.rx_costs_2010
from scp.data_hub_elig a


left join (select   Guid,  
sum (PaidAmt) rx_costs_2019
from scp.data_hub_rxclaims
where dateFilled >= '2019-01-01'
and dateFilled < '2020-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as k
on a.guid=k.guid


left join (select   Guid,  
sum (PaidAmt) rx_costs_2018
from scp.data_hub_rxclaims
where dateFilled >= '2018-01-01'
and dateFilled < '2019-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as j
on a.guid=j.guid

left join (select  Guid,  sum (PaidAmt) rx_costs_2017
from scp.data_hub_rxclaims
where dateFilled >= '2017-01-01'
and dateFilled < '2018-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as i
on a.guid=i.guid

left join (select  Guid,  sum (PaidAmt) rx_costs_2016
from scp.data_hub_rxclaims
where dateFilled >= '2016-01-01'
and dateFilled < '2017-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as h
on  a.guid=h.guid


left join (select  Guid,  sum (PaidAmt) rx_costs_2015
from scp.data_hub_rxclaims
where dateFilled >= '2015-01-01'
and dateFilled < '2016-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as g
on  a.guid=g.guid

left join (select  Guid,   sum (PaidAmt) rx_costs_2014
from scp.data_hub_rxclaims
where dateFilled >= '2014-01-01'
and dateFilled < '2015-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as f
on a.guid=f.guid


left join (select  Guid,sum (PaidAmt) rx_costs_2013
from scp.data_hub_rxclaims
where dateFilled >= '2013-01-01'
and dateFilled < '2014-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as e
on a.guid=e.guid


left join (select   Guid,  sum (PaidAmt) rx_costs_2012
from scp.data_hub_rxclaims
where dateFilled >= '2012-01-01'
and dateFilled < '2013-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as d
on  a.guid=d.guid


left join (select  Guid,  sum (PaidAmt) rx_costs_2011
from scp.data_hub_rxclaims
where dateFilled >= '2011-01-01'
and dateFilled < '2012-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as c
on a.guid=c.guid


left join (select  Guid,  sum (PaidAmt) rx_costs_2010
from scp.data_hub_rxclaims
where dateFilled >= '2010-01-01'
and dateFilled < '2011-01-01'
and customerID like '%HP_BCBSNE%'
group by Guid) as b
on  a.guid=b.guid

where a.customerID like '%HP_BCBSNE%'")
summary(BCBSNE_RXclaims_aggregated)




##################################################
##PAwel November 12th 2019 continue from here on
####################################################




#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Comment Pawel: Add or remove years that shall be pulled
#Currentyl only 2018 to 2010 are pulled
#also adjust which customer RX Asthma control  shall be pulled 
#Currentyl HP_BCBSNE

#3.get RX medication adhernece variables


RX.BCBSNE_Asthma_control_Rx = dbGetQuery(con, "
select guid,  CustomerID , NdcCode, NdcCode as NdsCode_2, DateFilled, cast(QuantityDispensed as numeric), cast(RefillCycleDays as numeric)
from  sc_reporting.DHS_RXClaims
where DateFilled >= '2014-01-01'
and customerID like '%HP_BCBSNE%'")



##remove "-" in NDC codes
RX.BCBSNE_Asthma_control_Rx_2<- as.numeric(gsub("-","",RX.BCBSNE_Asthma_control_Rx$NdcCode))



--create summary table for Asthma medication

--DROP TABLE data_science.BCBSNE_Asthma_control_Rx
create  table
data_science.BCBSNE_Asthma_control_Rx (Guid integer,  days_refill_2014 integer, days_refill_2015 integer, days_refill_2016 integer,  days_refill_2017 integer, days_refill_2018 integer)


--update table with Dispensed Astma control medication days per year
--insert Guids from eligibilty file and then update by year

insert into data_science.BCBSNE_Asthma_control_Rx 
select distinct  a.Guid as Guid,  b.days_refill_2014 ,  c.days_refill_2015, d.days_refill_2016 , e.days_refill_2017 , f.days_refill_2018 
from scp.data_hub_elig a

--insert 2014
left join (select guid, sum(RefillCycleDays) days_refill_2014
           from data_science.BCBSNE_Rx 
           where DateFilled between '2014-01-01' and '2014-12-31' 
           and NdcCode_num in
           (37054568, 603119058, 60258033516, 24839022716, 525037616, 64661081416, 37054192, 38130001201, 60258033601, 45985064701, 24839022601, 456064816, 485005916, 50242004062, 54868585700, 55045306300, 59310017540, 59310020212, 59310020240, 54868585800, 55045369508, 59310017780, 59310020412, 59310020480, 186091612, 54569592800, 54868584400, 186091706, 54868599000, 63402071201, 54868598900, 63402071101, 37759012, 37759063, 75989055012, 173060200, 173060202, 54569626600, 173060100, 173060102, 173060002, 54569626500, 173071920, 49999061401, 54569566300, 54868536200, 55045335100, 173072020, 54868563700, 55045335400, 173071820, 35356015701, 54569567100, 54868599500, 173087410, 173087414, 173087610, 173087614, 85433301, 85146102, 85146107, 85433401, 85134101, 85134102, 85134103, 85134104, 85134106, 85134107, 35356009914, 54868554700, 54868554701, 54868554702, 186037020, 186037028, 54868593600, 186037220, 186037228, 54868593700, 173069500, 173069504, 247198360, 49999098460, 54569524100, 54868451800, 55045338801, 55887067860, 173069600, 173069604,
            247197360, 21695019601, 23490754201, 49999081960, 54569524200, 54868451700, 55045368601, 58016460401, 68258303101, 173069700, 173069704, 247221560, 21695019701, 49999098560, 54569524300, 54868451600, 58016481301, 173071620, 173071622, 173071720, 173071722, 173071520, 173071522, 173085910, 173085914, 173088210, 173088214, 85720601, 85720607, 85461001, 85461005, 6011701, 6011728, 6011731, 6011754, 6011780, 6911731, 6911754, 6911780, 54025913, 54025922, 93742610, 93742656, 93742698, 143964909, 143964910, 143964930, 247198830, 378520193, 603465502, 603465516, 603465528, 603465532, 603465534, 781556031, 781556092, 904631061, 904652961, 12280004290, 13411015101, 13411015103, 13411015106, 13411015109, 13411015115, 13668008130, 13668008190, 16729011910, 16729011915, 16729011917, 27241001803, 27241001809, 27241001890, 29300022010, 29300022013, 29300022019, 31722072610, 31722072630, 31722072690, 33342010207, 33342010210, 33342010215, 42291062110, 42291062130, 42291062155, 42291062190, 43063038015, 43063038030, 49999053330, 49999053390, 50268057515, 51079022301, 51079022320, 54569460500, 54569634800, 54868328300, 54868328301, 54868328302, 55111072510, 55111072530, 55111072590,
            55111072594, 55289096115, 55289096130, 58864065830, 59762003001, 59762003002, 60505356203, 60505356208, 60505356209, 62175021032, 62175021043, 62175021046, 63629163901, 65862057419, 65862057430, 65862057490, 66105016402, 66105016403, 66105016406, 66105016409, 66105016410, 67801030503, 68001024803, 68001024804, 68001024805, 68084062001, 68084062011, 68084087501, 68084087511, 68115092330, 68258303303, 68462039205, 68462039230, 68462039290, 68645046654, 68645048470, 6384130, 93748756, 378604093, 27241001531, 55111076303, 66993041630, 6071101, 6071128, 6071131, 6071154, 6171131, 6171154, 54028813, 54028822, 93742456, 93742498, 143965109, 143965110, 143965130, 378520493, 603465302, 603465316, 603465328, 603465332, 781555431, 781555492, 13668007905, 13668007930, 13668007990, 27241001603, 27241001609, 31722072730, 31722072790, 42291062230, 42291062290, 43063038121, 43063038130, 49999095230, 50268057315, 54569516700, 54868463000, 55111059330, 55111059390, 55289098921, 55289098930, 59746035830, 59746035890, 59762004501, 59762004502, 60505357303, 60505357308, 60505357309, 62175020432, 62175020443, 62175020446, 65862056705, 65862056730, 65862056790, 68084063811, 68084063821, 6027501 ,6027528, 6027531,
            6027554, 6027582, 6927531, 6927554, 6927582, 54028913,54028922,93742556, 93742598, 143965009, 143965010,143965030, 378520593, 603465402, 603465416, 603465428, 603465432,781555531, 781555592,13411016001, 13411016003,13411016006, 13411016009, 13411016015,13668008005, 13668008030, 13668008090, 27241001703, 27241001709, 31722072830, 31722072890, 42291062330, 42291062390, 49999088430, 49999088490, 50268057415, 54569473600, 54868484700, 55111059430, 55111059490, 55289099021, 55289099030, 55887012090, 58864069430, 59746035930, 59746035990, 59762004601, 59762004602, 60505357403, 60505357408, 60505357409, 62175020532, 62175020543, 62175020546, 65862056805, 65862056830, 65862056890, 68084061901, 68084061911, 68084086401, 68258303203, 247189700, 247189730, 247189760, 247189777, 247189790, 310040160, 310041160, 49884001002, 49884030302, 49884054902, 49884058902, 55111062560, 66105050106, 247189800,
            247189814, 247189830, 247189860, 247189877, 247189890, 310040260, 310041260, 49884001102, 49884030402, 49884055402, 49884059002, 54569460401, 54569632100, 55111062660, 66105050206, 68084005921, 10122090112, 10122090212, 172640605, 172640649, 172640659, 54569454900, 54569477200, 60432015706, 60432015721, 143102001, 143102010,143102501, 143102510, 49999055000, 37052192, 37073192, 247082406, 247082410, 247082430, 247082460, 247082490, 490008000, 490008030, 490008060, 490008090, 904588761, 42291081390, 49999092130, 50111048301, 50111048302, 54868146101, 54868146102, 55045376808, 63629355101, 63874044301, 63874044315, 63874044320, 63874044330, 65162033510, 50474010001, 52244010010, 247065602, 247065604, 247065610, 247065614, 247065620, 247065628, 247065630, 247065660, 904588861, 35356012660, 42291081490, 50111048201, 50111048202, 50111048203, 54868002800, 54868002801, 54868002802, 54868002803, 54868002805,
            54868002806, 55887027730, 61392001645, 61392001654, 61392001656, 61392001691, 63629279201, 63629279202, 63874044701, 63874044715, 63874044720, 63874044730, 63874044760, 65162032411, 50474020001, 50474020050, 52244020010, 904588961, 23155006201, 23490735501, 42291081590, 50111045901, 50111045902, 50111045903, 54569006501, 54569006502, 54569006505, 54868002900, 54868002902, 54868002903, 54868002905, 54868002906, 54868002907, 55887084760, 55887084790, 61392001754, 61392001756, 61392001791, 62332002531, 63874067501, 63874067515, 63874067520, 50474030001, 50474030050, 52244030010, 54569166600, 54868271000, 54868271001, 50474040001, 52244040010, 29033000101, 42858070101, 68462038001, 23155006301, 50111051801, 62332002631, 29033000201, 42858070201, 68462035601, 121479415, 17856064430, 17856064431, 49708064490, 10135060408, 27808003301, 51862013116, 54838055680)
           group by Guid) as b
on  a.guid=b.guid

--insert 2015
left join (select guid, sum(RefillCycleDays) days_refill_2015
           from data_science.BCBSNE_Rx 
           where DateFilled between '2015-01-01' and '2015-12-31' 
           and NdcCode_num in
           (37054568, 603119058, 60258033516, 24839022716, 525037616, 64661081416, 37054192, 38130001201, 60258033601, 45985064701, 24839022601, 456064816, 485005916, 50242004062, 54868585700, 55045306300, 59310017540, 59310020212, 59310020240, 54868585800, 55045369508, 59310017780, 59310020412, 59310020480, 186091612, 54569592800, 54868584400, 186091706, 54868599000, 63402071201, 54868598900, 63402071101, 37759012, 37759063, 75989055012, 173060200, 173060202, 54569626600, 173060100, 173060102, 173060002, 54569626500, 173071920, 49999061401, 54569566300, 54868536200, 55045335100, 173072020, 54868563700, 55045335400, 173071820, 35356015701, 54569567100, 54868599500, 173087410, 173087414, 173087610, 173087614, 85433301, 85146102, 85146107, 85433401, 85134101, 85134102, 85134103, 85134104, 85134106, 85134107, 35356009914, 54868554700, 54868554701, 54868554702, 186037020, 186037028, 54868593600, 186037220, 186037228, 54868593700, 173069500, 173069504, 247198360, 49999098460, 54569524100, 54868451800, 55045338801, 55887067860, 173069600, 173069604,
            247197360, 21695019601, 23490754201, 49999081960, 54569524200, 54868451700, 55045368601, 58016460401, 68258303101, 173069700, 173069704, 247221560, 21695019701, 49999098560, 54569524300, 54868451600, 58016481301, 173071620, 173071622, 173071720, 173071722, 173071520, 173071522, 173085910, 173085914, 173088210, 173088214, 85720601, 85720607, 85461001, 85461005, 6011701, 6011728, 6011731, 6011754, 6011780, 6911731, 6911754, 6911780, 54025913, 54025922, 93742610, 93742656, 93742698, 143964909, 143964910, 143964930, 247198830, 378520193, 603465502, 603465516, 603465528, 603465532, 603465534, 781556031, 781556092, 904631061, 904652961, 12280004290, 13411015101, 13411015103, 13411015106, 13411015109, 13411015115, 13668008130, 13668008190, 16729011910, 16729011915, 16729011917, 27241001803, 27241001809, 27241001890, 29300022010, 29300022013, 29300022019, 31722072610, 31722072630, 31722072690, 33342010207, 33342010210, 33342010215, 42291062110, 42291062130, 42291062155, 42291062190, 43063038015, 43063038030, 49999053330, 49999053390, 50268057515, 51079022301, 51079022320, 54569460500, 54569634800, 54868328300, 54868328301, 54868328302, 55111072510, 55111072530, 55111072590,
            55111072594, 55289096115, 55289096130, 58864065830, 59762003001, 59762003002, 60505356203, 60505356208, 60505356209, 62175021032, 62175021043, 62175021046, 63629163901, 65862057419, 65862057430, 65862057490, 66105016402, 66105016403, 66105016406, 66105016409, 66105016410, 67801030503, 68001024803, 68001024804, 68001024805, 68084062001, 68084062011, 68084087501, 68084087511, 68115092330, 68258303303, 68462039205, 68462039230, 68462039290, 68645046654, 68645048470, 6384130, 93748756, 378604093, 27241001531, 55111076303, 66993041630, 6071101, 6071128, 6071131, 6071154, 6171131, 6171154, 54028813, 54028822, 93742456, 93742498, 143965109, 143965110, 143965130, 378520493, 603465302, 603465316, 603465328, 603465332, 781555431, 781555492, 13668007905, 13668007930, 13668007990, 27241001603, 27241001609, 31722072730, 31722072790, 42291062230, 42291062290, 43063038121, 43063038130, 49999095230, 50268057315, 54569516700, 54868463000, 55111059330, 55111059390, 55289098921, 55289098930, 59746035830, 59746035890, 59762004501, 59762004502, 60505357303, 60505357308, 60505357309, 62175020432, 62175020443, 62175020446, 65862056705, 65862056730, 65862056790, 68084063811, 68084063821, 6027501 ,6027528, 6027531,
            6027554, 6027582, 6927531, 6927554, 6927582, 54028913,54028922,93742556, 93742598, 143965009, 143965010,143965030, 378520593, 603465402, 603465416, 603465428, 603465432,781555531, 781555592,13411016001, 13411016003,13411016006, 13411016009, 13411016015,13668008005, 13668008030, 13668008090, 27241001703, 27241001709, 31722072830, 31722072890, 42291062330, 42291062390, 49999088430, 49999088490, 50268057415, 54569473600, 54868484700, 55111059430, 55111059490, 55289099021, 55289099030, 55887012090, 58864069430, 59746035930, 59746035990, 59762004601, 59762004602, 60505357403, 60505357408, 60505357409, 62175020532, 62175020543, 62175020546, 65862056805, 65862056830, 65862056890, 68084061901, 68084061911, 68084086401, 68258303203, 247189700, 247189730, 247189760, 247189777, 247189790, 310040160, 310041160, 49884001002, 49884030302, 49884054902, 49884058902, 55111062560, 66105050106, 247189800,
            247189814, 247189830, 247189860, 247189877, 247189890, 310040260, 310041260, 49884001102, 49884030402, 49884055402, 49884059002, 54569460401, 54569632100, 55111062660, 66105050206, 68084005921, 10122090112, 10122090212, 172640605, 172640649, 172640659, 54569454900, 54569477200, 60432015706, 60432015721, 143102001, 143102010,143102501, 143102510, 49999055000, 37052192, 37073192, 247082406, 247082410, 247082430, 247082460, 247082490, 490008000, 490008030, 490008060, 490008090, 904588761, 42291081390, 49999092130, 50111048301, 50111048302, 54868146101, 54868146102, 55045376808, 63629355101, 63874044301, 63874044315, 63874044320, 63874044330, 65162033510, 50474010001, 52244010010, 247065602, 247065604, 247065610, 247065614, 247065620, 247065628, 247065630, 247065660, 904588861, 35356012660, 42291081490, 50111048201, 50111048202, 50111048203, 54868002800, 54868002801, 54868002802, 54868002803, 54868002805,
            54868002806, 55887027730, 61392001645, 61392001654, 61392001656, 61392001691, 63629279201, 63629279202, 63874044701, 63874044715, 63874044720, 63874044730, 63874044760, 65162032411, 50474020001, 50474020050, 52244020010, 904588961, 23155006201, 23490735501, 42291081590, 50111045901, 50111045902, 50111045903, 54569006501, 54569006502, 54569006505, 54868002900, 54868002902, 54868002903, 54868002905, 54868002906, 54868002907, 55887084760, 55887084790, 61392001754, 61392001756, 61392001791, 62332002531, 63874067501, 63874067515, 63874067520, 50474030001, 50474030050, 52244030010, 54569166600, 54868271000, 54868271001, 50474040001, 52244040010, 29033000101, 42858070101, 68462038001, 23155006301, 50111051801, 62332002631, 29033000201, 42858070201, 68462035601, 121479415, 17856064430, 17856064431, 49708064490, 10135060408, 27808003301, 51862013116, 54838055680)
           group by Guid) as c
on a.guid=c.guid

--insert 2016
left join (select guid,sum(RefillCycleDays) days_refill_2016
           from data_science.BCBSNE_Rx 
           where DateFilled between '2016-01-01' and '2016-12-31' 
           and NdcCode_num in
           (37054568, 603119058, 60258033516, 24839022716, 525037616, 64661081416, 37054192, 38130001201, 60258033601, 45985064701, 24839022601, 456064816, 485005916, 50242004062, 54868585700, 55045306300, 59310017540, 59310020212, 59310020240, 54868585800, 55045369508, 59310017780, 59310020412, 59310020480, 186091612, 54569592800, 54868584400, 186091706, 54868599000, 63402071201, 54868598900, 63402071101, 37759012, 37759063, 75989055012, 173060200, 173060202, 54569626600, 173060100, 173060102, 173060002, 54569626500, 173071920, 49999061401, 54569566300, 54868536200, 55045335100, 173072020, 54868563700, 55045335400, 173071820, 35356015701, 54569567100, 54868599500, 173087410, 173087414, 173087610, 173087614, 85433301, 85146102, 85146107, 85433401, 85134101, 85134102, 85134103, 85134104, 85134106, 85134107, 35356009914, 54868554700, 54868554701, 54868554702, 186037020, 186037028, 54868593600, 186037220, 186037228, 54868593700, 173069500, 173069504, 247198360, 49999098460, 54569524100, 54868451800, 55045338801, 55887067860, 173069600, 173069604,
            247197360, 21695019601, 23490754201, 49999081960, 54569524200, 54868451700, 55045368601, 58016460401, 68258303101, 173069700, 173069704, 247221560, 21695019701, 49999098560, 54569524300, 54868451600, 58016481301, 173071620, 173071622, 173071720, 173071722, 173071520, 173071522, 173085910, 173085914, 173088210, 173088214, 85720601, 85720607, 85461001, 85461005, 6011701, 6011728, 6011731, 6011754, 6011780, 6911731, 6911754, 6911780, 54025913, 54025922, 93742610, 93742656, 93742698, 143964909, 143964910, 143964930, 247198830, 378520193, 603465502, 603465516, 603465528, 603465532, 603465534, 781556031, 781556092, 904631061, 904652961, 12280004290, 13411015101, 13411015103, 13411015106, 13411015109, 13411015115, 13668008130, 13668008190, 16729011910, 16729011915, 16729011917, 27241001803, 27241001809, 27241001890, 29300022010, 29300022013, 29300022019, 31722072610, 31722072630, 31722072690, 33342010207, 33342010210, 33342010215, 42291062110, 42291062130, 42291062155, 42291062190, 43063038015, 43063038030, 49999053330, 49999053390, 50268057515, 51079022301, 51079022320, 54569460500, 54569634800, 54868328300, 54868328301, 54868328302, 55111072510, 55111072530, 55111072590,
            55111072594, 55289096115, 55289096130, 58864065830, 59762003001, 59762003002, 60505356203, 60505356208, 60505356209, 62175021032, 62175021043, 62175021046, 63629163901, 65862057419, 65862057430, 65862057490, 66105016402, 66105016403, 66105016406, 66105016409, 66105016410, 67801030503, 68001024803, 68001024804, 68001024805, 68084062001, 68084062011, 68084087501, 68084087511, 68115092330, 68258303303, 68462039205, 68462039230, 68462039290, 68645046654, 68645048470, 6384130, 93748756, 378604093, 27241001531, 55111076303, 66993041630, 6071101, 6071128, 6071131, 6071154, 6171131, 6171154, 54028813, 54028822, 93742456, 93742498, 143965109, 143965110, 143965130, 378520493, 603465302, 603465316, 603465328, 603465332, 781555431, 781555492, 13668007905, 13668007930, 13668007990, 27241001603, 27241001609, 31722072730, 31722072790, 42291062230, 42291062290, 43063038121, 43063038130, 49999095230, 50268057315, 54569516700, 54868463000, 55111059330, 55111059390, 55289098921, 55289098930, 59746035830, 59746035890, 59762004501, 59762004502, 60505357303, 60505357308, 60505357309, 62175020432, 62175020443, 62175020446, 65862056705, 65862056730, 65862056790, 68084063811, 68084063821, 6027501 ,6027528, 6027531,
            6027554, 6027582, 6927531, 6927554, 6927582, 54028913,54028922,93742556, 93742598, 143965009, 143965010,143965030, 378520593, 603465402, 603465416, 603465428, 603465432,781555531, 781555592,13411016001, 13411016003,13411016006, 13411016009, 13411016015,13668008005, 13668008030, 13668008090, 27241001703, 27241001709, 31722072830, 31722072890, 42291062330, 42291062390, 49999088430, 49999088490, 50268057415, 54569473600, 54868484700, 55111059430, 55111059490, 55289099021, 55289099030, 55887012090, 58864069430, 59746035930, 59746035990, 59762004601, 59762004602, 60505357403, 60505357408, 60505357409, 62175020532, 62175020543, 62175020546, 65862056805, 65862056830, 65862056890, 68084061901, 68084061911, 68084086401, 68258303203, 247189700, 247189730, 247189760, 247189777, 247189790, 310040160, 310041160, 49884001002, 49884030302, 49884054902, 49884058902, 55111062560, 66105050106, 247189800,
            247189814, 247189830, 247189860, 247189877, 247189890, 310040260, 310041260, 49884001102, 49884030402, 49884055402, 49884059002, 54569460401, 54569632100, 55111062660, 66105050206, 68084005921, 10122090112, 10122090212, 172640605, 172640649, 172640659, 54569454900, 54569477200, 60432015706, 60432015721, 143102001, 143102010,143102501, 143102510, 49999055000, 37052192, 37073192, 247082406, 247082410, 247082430, 247082460, 247082490, 490008000, 490008030, 490008060, 490008090, 904588761, 42291081390, 49999092130, 50111048301, 50111048302, 54868146101, 54868146102, 55045376808, 63629355101, 63874044301, 63874044315, 63874044320, 63874044330, 65162033510, 50474010001, 52244010010, 247065602, 247065604, 247065610, 247065614, 247065620, 247065628, 247065630, 247065660, 904588861, 35356012660, 42291081490, 50111048201, 50111048202, 50111048203, 54868002800, 54868002801, 54868002802, 54868002803, 54868002805,
            54868002806, 55887027730, 61392001645, 61392001654, 61392001656, 61392001691, 63629279201, 63629279202, 63874044701, 63874044715, 63874044720, 63874044730, 63874044760, 65162032411, 50474020001, 50474020050, 52244020010, 904588961, 23155006201, 23490735501, 42291081590, 50111045901, 50111045902, 50111045903, 54569006501, 54569006502, 54569006505, 54868002900, 54868002902, 54868002903, 54868002905, 54868002906, 54868002907, 55887084760, 55887084790, 61392001754, 61392001756, 61392001791, 62332002531, 63874067501, 63874067515, 63874067520, 50474030001, 50474030050, 52244030010, 54569166600, 54868271000, 54868271001, 50474040001, 52244040010, 29033000101, 42858070101, 68462038001, 23155006301, 50111051801, 62332002631, 29033000201, 42858070201, 68462035601, 121479415, 17856064430, 17856064431, 49708064490, 10135060408, 27808003301, 51862013116, 54838055680)
           group by Guid) as d
on a.guid=d.guid

--insert 2017
left join (select guid, sum(RefillCycleDays) days_refill_2017
           from data_science.BCBSNE_Rx 
           where DateFilled between '2017-01-01' and '2017-12-31' 
           and NdcCode_num in
           (37054568, 603119058, 60258033516, 24839022716, 525037616, 64661081416, 37054192, 38130001201, 60258033601, 45985064701, 24839022601, 456064816, 485005916, 50242004062, 54868585700, 55045306300, 59310017540, 59310020212, 59310020240, 54868585800, 55045369508, 59310017780, 59310020412, 59310020480, 186091612, 54569592800, 54868584400, 186091706, 54868599000, 63402071201, 54868598900, 63402071101, 37759012, 37759063, 75989055012, 173060200, 173060202, 54569626600, 173060100, 173060102, 173060002, 54569626500, 173071920, 49999061401, 54569566300, 54868536200, 55045335100, 173072020, 54868563700, 55045335400, 173071820, 35356015701, 54569567100, 54868599500, 173087410, 173087414, 173087610, 173087614, 85433301, 85146102, 85146107, 85433401, 85134101, 85134102, 85134103, 85134104, 85134106, 85134107, 35356009914, 54868554700, 54868554701, 54868554702, 186037020, 186037028, 54868593600, 186037220, 186037228, 54868593700, 173069500, 173069504, 247198360, 49999098460, 54569524100, 54868451800, 55045338801, 55887067860, 173069600, 173069604,
            247197360, 21695019601, 23490754201, 49999081960, 54569524200, 54868451700, 55045368601, 58016460401, 68258303101, 173069700, 173069704, 247221560, 21695019701, 49999098560, 54569524300, 54868451600, 58016481301, 173071620, 173071622, 173071720, 173071722, 173071520, 173071522, 173085910, 173085914, 173088210, 173088214, 85720601, 85720607, 85461001, 85461005, 6011701, 6011728, 6011731, 6011754, 6011780, 6911731, 6911754, 6911780, 54025913, 54025922, 93742610, 93742656, 93742698, 143964909, 143964910, 143964930, 247198830, 378520193, 603465502, 603465516, 603465528, 603465532, 603465534, 781556031, 781556092, 904631061, 904652961, 12280004290, 13411015101, 13411015103, 13411015106, 13411015109, 13411015115, 13668008130, 13668008190, 16729011910, 16729011915, 16729011917, 27241001803, 27241001809, 27241001890, 29300022010, 29300022013, 29300022019, 31722072610, 31722072630, 31722072690, 33342010207, 33342010210, 33342010215, 42291062110, 42291062130, 42291062155, 42291062190, 43063038015, 43063038030, 49999053330, 49999053390, 50268057515, 51079022301, 51079022320, 54569460500, 54569634800, 54868328300, 54868328301, 54868328302, 55111072510, 55111072530, 55111072590,
            55111072594, 55289096115, 55289096130, 58864065830, 59762003001, 59762003002, 60505356203, 60505356208, 60505356209, 62175021032, 62175021043, 62175021046, 63629163901, 65862057419, 65862057430, 65862057490, 66105016402, 66105016403, 66105016406, 66105016409, 66105016410, 67801030503, 68001024803, 68001024804, 68001024805, 68084062001, 68084062011, 68084087501, 68084087511, 68115092330, 68258303303, 68462039205, 68462039230, 68462039290, 68645046654, 68645048470, 6384130, 93748756, 378604093, 27241001531, 55111076303, 66993041630, 6071101, 6071128, 6071131, 6071154, 6171131, 6171154, 54028813, 54028822, 93742456, 93742498, 143965109, 143965110, 143965130, 378520493, 603465302, 603465316, 603465328, 603465332, 781555431, 781555492, 13668007905, 13668007930, 13668007990, 27241001603, 27241001609, 31722072730, 31722072790, 42291062230, 42291062290, 43063038121, 43063038130, 49999095230, 50268057315, 54569516700, 54868463000, 55111059330, 55111059390, 55289098921, 55289098930, 59746035830, 59746035890, 59762004501, 59762004502, 60505357303, 60505357308, 60505357309, 62175020432, 62175020443, 62175020446, 65862056705, 65862056730, 65862056790, 68084063811, 68084063821, 6027501 ,6027528, 6027531,
            6027554, 6027582, 6927531, 6927554, 6927582, 54028913,54028922,93742556, 93742598, 143965009, 143965010,143965030, 378520593, 603465402, 603465416, 603465428, 603465432,781555531, 781555592,13411016001, 13411016003,13411016006, 13411016009, 13411016015,13668008005, 13668008030, 13668008090, 27241001703, 27241001709, 31722072830, 31722072890, 42291062330, 42291062390, 49999088430, 49999088490, 50268057415, 54569473600, 54868484700, 55111059430, 55111059490, 55289099021, 55289099030, 55887012090, 58864069430, 59746035930, 59746035990, 59762004601, 59762004602, 60505357403, 60505357408, 60505357409, 62175020532, 62175020543, 62175020546, 65862056805, 65862056830, 65862056890, 68084061901, 68084061911, 68084086401, 68258303203, 247189700, 247189730, 247189760, 247189777, 247189790, 310040160, 310041160, 49884001002, 49884030302, 49884054902, 49884058902, 55111062560, 66105050106, 247189800,
            247189814, 247189830, 247189860, 247189877, 247189890, 310040260, 310041260, 49884001102, 49884030402, 49884055402, 49884059002, 54569460401, 54569632100, 55111062660, 66105050206, 68084005921, 10122090112, 10122090212, 172640605, 172640649, 172640659, 54569454900, 54569477200, 60432015706, 60432015721, 143102001, 143102010,143102501, 143102510, 49999055000, 37052192, 37073192, 247082406, 247082410, 247082430, 247082460, 247082490, 490008000, 490008030, 490008060, 490008090, 904588761, 42291081390, 49999092130, 50111048301, 50111048302, 54868146101, 54868146102, 55045376808, 63629355101, 63874044301, 63874044315, 63874044320, 63874044330, 65162033510, 50474010001, 52244010010, 247065602, 247065604, 247065610, 247065614, 247065620, 247065628, 247065630, 247065660, 904588861, 35356012660, 42291081490, 50111048201, 50111048202, 50111048203, 54868002800, 54868002801, 54868002802, 54868002803, 54868002805,
            54868002806, 55887027730, 61392001645, 61392001654, 61392001656, 61392001691, 63629279201, 63629279202, 63874044701, 63874044715, 63874044720, 63874044730, 63874044760, 65162032411, 50474020001, 50474020050, 52244020010, 904588961, 23155006201, 23490735501, 42291081590, 50111045901, 50111045902, 50111045903, 54569006501, 54569006502, 54569006505, 54868002900, 54868002902, 54868002903, 54868002905, 54868002906, 54868002907, 55887084760, 55887084790, 61392001754, 61392001756, 61392001791, 62332002531, 63874067501, 63874067515, 63874067520, 50474030001, 50474030050, 52244030010, 54569166600, 54868271000, 54868271001, 50474040001, 52244040010, 29033000101, 42858070101, 68462038001, 23155006301, 50111051801, 62332002631, 29033000201, 42858070201, 68462035601, 121479415, 17856064430, 17856064431, 49708064490, 10135060408, 27808003301, 51862013116, 54838055680)
           group by Guid) as e
on a.guid=e.guid

--insert 2018
left join (select guid,sum(RefillCycleDays) days_refill_2018
           from data_science.BCBSNE_Rx 
           where DateFilled between '2018-01-01' and '2018-12-31' 
           and NdcCode_num in
           (37054568, 603119058, 60258033516, 24839022716, 525037616, 64661081416, 37054192, 38130001201, 60258033601, 45985064701, 24839022601, 456064816, 485005916, 50242004062, 54868585700, 55045306300, 59310017540, 59310020212, 59310020240, 54868585800, 55045369508, 59310017780, 59310020412, 59310020480, 186091612, 54569592800, 54868584400, 186091706, 54868599000, 63402071201, 54868598900, 63402071101, 37759012, 37759063, 75989055012, 173060200, 173060202, 54569626600, 173060100, 173060102, 173060002, 54569626500, 173071920, 49999061401, 54569566300, 54868536200, 55045335100, 173072020, 54868563700, 55045335400, 173071820, 35356015701, 54569567100, 54868599500, 173087410, 173087414, 173087610, 173087614, 85433301, 85146102, 85146107, 85433401, 85134101, 85134102, 85134103, 85134104, 85134106, 85134107, 35356009914, 54868554700, 54868554701, 54868554702, 186037020, 186037028, 54868593600, 186037220, 186037228, 54868593700, 173069500, 173069504, 247198360, 49999098460, 54569524100, 54868451800, 55045338801, 55887067860, 173069600, 173069604,
            247197360, 21695019601, 23490754201, 49999081960, 54569524200, 54868451700, 55045368601, 58016460401, 68258303101, 173069700, 173069704, 247221560, 21695019701, 49999098560, 54569524300, 54868451600, 58016481301, 173071620, 173071622, 173071720, 173071722, 173071520, 173071522, 173085910, 173085914, 173088210, 173088214, 85720601, 85720607, 85461001, 85461005, 6011701, 6011728, 6011731, 6011754, 6011780, 6911731, 6911754, 6911780, 54025913, 54025922, 93742610, 93742656, 93742698, 143964909, 143964910, 143964930, 247198830, 378520193, 603465502, 603465516, 603465528, 603465532, 603465534, 781556031, 781556092, 904631061, 904652961, 12280004290, 13411015101, 13411015103, 13411015106, 13411015109, 13411015115, 13668008130, 13668008190, 16729011910, 16729011915, 16729011917, 27241001803, 27241001809, 27241001890, 29300022010, 29300022013, 29300022019, 31722072610, 31722072630, 31722072690, 33342010207, 33342010210, 33342010215, 42291062110, 42291062130, 42291062155, 42291062190, 43063038015, 43063038030, 49999053330, 49999053390, 50268057515, 51079022301, 51079022320, 54569460500, 54569634800, 54868328300, 54868328301, 54868328302, 55111072510, 55111072530, 55111072590,
            55111072594, 55289096115, 55289096130, 58864065830, 59762003001, 59762003002, 60505356203, 60505356208, 60505356209, 62175021032, 62175021043, 62175021046, 63629163901, 65862057419, 65862057430, 65862057490, 66105016402, 66105016403, 66105016406, 66105016409, 66105016410, 67801030503, 68001024803, 68001024804, 68001024805, 68084062001, 68084062011, 68084087501, 68084087511, 68115092330, 68258303303, 68462039205, 68462039230, 68462039290, 68645046654, 68645048470, 6384130, 93748756, 378604093, 27241001531, 55111076303, 66993041630, 6071101, 6071128, 6071131, 6071154, 6171131, 6171154, 54028813, 54028822, 93742456, 93742498, 143965109, 143965110, 143965130, 378520493, 603465302, 603465316, 603465328, 603465332, 781555431, 781555492, 13668007905, 13668007930, 13668007990, 27241001603, 27241001609, 31722072730, 31722072790, 42291062230, 42291062290, 43063038121, 43063038130, 49999095230, 50268057315, 54569516700, 54868463000, 55111059330, 55111059390, 55289098921, 55289098930, 59746035830, 59746035890, 59762004501, 59762004502, 60505357303, 60505357308, 60505357309, 62175020432, 62175020443, 62175020446, 65862056705, 65862056730, 65862056790, 68084063811, 68084063821, 6027501 ,6027528, 6027531,
            6027554, 6027582, 6927531, 6927554, 6927582, 54028913,54028922,93742556, 93742598, 143965009, 143965010,143965030, 378520593, 603465402, 603465416, 603465428, 603465432,781555531, 781555592,13411016001, 13411016003,13411016006, 13411016009, 13411016015,13668008005, 13668008030, 13668008090, 27241001703, 27241001709, 31722072830, 31722072890, 42291062330, 42291062390, 49999088430, 49999088490, 50268057415, 54569473600, 54868484700, 55111059430, 55111059490, 55289099021, 55289099030, 55887012090, 58864069430, 59746035930, 59746035990, 59762004601, 59762004602, 60505357403, 60505357408, 60505357409, 62175020532, 62175020543, 62175020546, 65862056805, 65862056830, 65862056890, 68084061901, 68084061911, 68084086401, 68258303203, 247189700, 247189730, 247189760, 247189777, 247189790, 310040160, 310041160, 49884001002, 49884030302, 49884054902, 49884058902, 55111062560, 66105050106, 247189800,
            247189814, 247189830, 247189860, 247189877, 247189890, 310040260, 310041260, 49884001102, 49884030402, 49884055402, 49884059002, 54569460401, 54569632100, 55111062660, 66105050206, 68084005921, 10122090112, 10122090212, 172640605, 172640649, 172640659, 54569454900, 54569477200, 60432015706, 60432015721, 143102001, 143102010,143102501, 143102510, 49999055000, 37052192, 37073192, 247082406, 247082410, 247082430, 247082460, 247082490, 490008000, 490008030, 490008060, 490008090, 904588761, 42291081390, 49999092130, 50111048301, 50111048302, 54868146101, 54868146102, 55045376808, 63629355101, 63874044301, 63874044315, 63874044320, 63874044330, 65162033510, 50474010001, 52244010010, 247065602, 247065604, 247065610, 247065614, 247065620, 247065628, 247065630, 247065660, 904588861, 35356012660, 42291081490, 50111048201, 50111048202, 50111048203, 54868002800, 54868002801, 54868002802, 54868002803, 54868002805,
            54868002806, 55887027730, 61392001645, 61392001654, 61392001656, 61392001691, 63629279201, 63629279202, 63874044701, 63874044715, 63874044720, 63874044730, 63874044760, 65162032411, 50474020001, 50474020050, 52244020010, 904588961, 23155006201, 23490735501, 42291081590, 50111045901, 50111045902, 50111045903, 54569006501, 54569006502, 54569006505, 54868002900, 54868002902, 54868002903, 54868002905, 54868002906, 54868002907, 55887084760, 55887084790, 61392001754, 61392001756, 61392001791, 62332002531, 63874067501, 63874067515, 63874067520, 50474030001, 50474030050, 52244030010, 54569166600, 54868271000, 54868271001, 50474040001, 52244040010, 29033000101, 42858070101, 68462038001, 23155006301, 50111051801, 62332002631, 29033000201, 42858070201, 68462035601, 121479415, 17856064430, 17856064431, 49708064490, 10135060408, 27808003301, 51862013116, 54838055680)
           group by Guid) as f
on a.guid=f.guid

--limit Guids from eligibility file to BCBSNE
where a.customerID like '%HP_BCBSNE%'









BCBSNE_Asthma_control_Rx = dbGetQuery(con, "select * 
  from data_science.BCBSNE_Asthma_control_Rx")
summary(BCBSNE_Asthma_control_Rx)





#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#adjust which customer eligibility  shall be pulled 
#Currentyl HP_BCBSNE



#4.get eligibility

#4a. import nomal eligibility file
#import direct from Vertica


BCBSNE_eligibility =dbGetQuery(con, "
select distinct Guid, customerId, memberUniqueId, RelationshipCode, Dob, Gender, MaritalStatus, EligibilityStartDate, EligibilityEndDate, BenefitStatusCode, PlanCategory, PlanType, LnVendorDateFirstSeen, LnVendorDateLastSeen, CreateDtUtc
from scp.data_hub_elig
where customerId like '%HP_BCBSNE%'")






#5 import condition history 
#Potential issue: min create date 2017-11-13, max create date 2019-09-05
#import direct from Vertica


BCBSNE_condition_history = dbGetQuery(con, "select * 
  from sc_reporting.scp_member_condition_history
where guid in (select guid   
               from scp.data_hub_elig
               where customerId like '%HP_BCBSNE%')")



#6 import call history 
#min call date 2000-06-13, max call date 2019-09-07

BCBSNE_calls = dbGetQuery(con, "select * 
from data_science.BCBSNE_calls")
summary(BCBSNE_calls)



#############################
## Data Manipulation
#############################

#limit popolation by Guid
#if limited by Guid, DOB and Gender N=447,081
#if limited by Guid only N=446,162
#but need to retain DOB, thefore wil retaim most current record DOB
#N=3,144,110
Match.Population <- BCBSNE_eligibility[,c(1,5:6, 15)]


#Retain only the most recent date for every Guid in a data frame
#from https://stackoverflow.com/questions/30058708/retain-only-the-most-recent-date-for-every-id-in-a-data-frame
#N=446,162 (the same amount as unique Guids)

Match.Population_2 <- Match.Population %>% 
  group_by(Guid) %>%
  slice(which.max(as.Date(CreateDtUtc, '%m/%d/%Y')))

#create new Gender variable where 02 is M and 03 is Female
Match.Population_2$Gender2 <- ifelse(Match.Population_2$Gender=="02","M","F")

#drop old gender variable
Match.Population_2 <- Match.Population_2[,c(1:2,4:5)]
#rename Gender2 to Gender
colnames(Match.Population_2) <- c("Guid", "Dob", "CreateDtUtc", "Gender")


#Calulate age as of Base Period 2014/01/01'

#First make sure that Dob is a datefomat
Match.Population_2$Dob <- as.Date(Match.Population_2$Dob, "%Y/%m/%d")
#calulate age as of January 1st 2014
Match.Population_2$age <- round(as.numeric(difftime("2014/01/01", Match.Population_2$Dob, unit='weeks'))/52.25) 

#create cloumn for age bands with a dummy variable
Match.Population_2$AgeBand <- "AgeBand"
#nested ifelse function to create AgeBands from 0-9 up to 100+
Match.Population_2$AgeBand <- ifelse(Match.Population_2$age <10,"0-9",ifelse(Match.Population_2$age > 9 & Match.Population_2$age <= 19,"10-19",ifelse(Match.Population_2$age > 19 & Match.Population_2$age <= 29,"20-29", ifelse(Match.Population_2$age > 29 & Match.Population_2$age <= 39,"30-39", ifelse(Match.Population_2$age > 39 & Match.Population_2$age <= 49,"40-49", ifelse(Match.Population_2$age > 49 & Match.Population_2$age <= 59,"50-59",ifelse(Match.Population_2$age > 59 & Match.Population_2$age <= 69,"60-69",ifelse(Match.Population_2$age > 69 & Match.Population_2$age <= 79,"70-79",ifelse(Match.Population_2$age > 79 & Match.Population_2$age <= 89,"80-89",ifelse(Match.Population_2$age > 89 & Match.Population_2$age <= 99,"90-99","+100"))))))))))

  

# Medical claims: left Join program participants and medical claims
Match.Population_3 <- left_join(Match.Population_2, BCBSNE_medclaims_aggregated, by = "Guid")

# Rx claims: left Join program participants and Rx claims
Match.Population_4 <- left_join(Match.Population_3, BCBSNE_RXclaims_aggregated, by = "Guid")

# Asthma medication adherence variable
# 1st remove unecessary colums so only the 0/1 flag is left
BCBSNE_Asthma_control_Rx_2 <- BCBSNE_Asthma_control_Rx[,c(1, 7:11)]
#left join on matching population
Match.Population_5 <- left_join(Match.Population_4, BCBSNE_Asthma_control_Rx_2, by = "Guid")






#Disease ID

#unique disease fields
match.unique_diease_fields <- unique(BCBSNE_condition_history[,c('DIAGNOSIS','CREATED_BY' )])
#Heart Failure is 
#"Heart Failure" created by "Data Migration" 
#	[Default]HF Manual Add by "morrisonk"
#"[Default]HF ID Real Age"by	"morrisonk"
#"Heart Failure" by "COACH-827"
#"[Default]HF Manual Add" by "blankev"
#"[Default]HF Manual Add" by "dicristofarok"
#"[Default]HF Manual Add" by "merlenbacht"

#frequencies
BCBSNE_condition_count<-BCBSNE_condition_history %>%
  distinct()%>%
  count (DIAGNOSIS, CREATED_BY)

#focus only on the data migration conditions
BCBSNE_condition_history_2 <- subset(BCBSNE_condition_history, CREATED_BY=="DataMigration" & STATUS==1) 


#imiting conditions to conditions in "Core5" list
Core5 <- c("Heart Failure", "Coronary Artery Disease", "Chronic Obstructive Pulmonary Disease", "Diabetes", "Asthma")
BCBSNE_condition_history_3 <- subset(BCBSNE_condition_history_2, DIAGNOSIS %in% Core5)


BCBSNE_condition_history_4 <- dcast(transform(BCBSNE_condition_history_3, count = 1), GUID~DIAGNOSIS, fill = 0)

#rename column names so they have no spacing
colnames(BCBSNE_condition_history_4) <- c("Guid", "Asthma", "COPD", "CAD", "Diabetes", "HF")

BCBSNE_condition_history_4$Core5_count <- BCBSNE_condition_history_4$Asthma + BCBSNE_condition_history_4$COPD + BCBSNE_condition_history_4$CAD + BCBSNE_condition_history_4$Diabetes + BCBSNE_condition_history_4$HF;

###########################################
#continue here on   wedenday September 18th
#merge admission count with population table
# work on admission count by year
#work on call count by year
#limit superoutliers & capping of costs
#rework medclaims and RX table in R?

######################################
### CEM GERAL
######################################

Matching_results <- matchit(Participated ~ GENDER + age_group +  base_admit_group + condition_count + Diabetes + HF + CAD + COPD + Asthma + Base_2014_Pers_Asthma_Rx_Covd, data = combine_5_wrx,  method="cem")

Matching_results_summary <- summary(Matching_results)

Matching_table <- match.data(Matching_results)





#### Treatment and Control
CEM.Group.Treatment <- subset(Matching_table, Participated == 1)


CEM.Group.Control   <- subset(Matching_table, Participated == 0)



Treatment.Program_2017 <- mean(CEM.Group.Treatment$Yr_2017_Total_Costs_capped * CEM.Group.Treatment$weights)
Treatment.Base_2014    <- mean(CEM.Group.Treatment$Base_2014_Total_Costs_capped * CEM.Group.Treatment$weights)

Control.Program_2017 <- mean(CEM.Group.Control$Yr_2017_Total_Costs_capped * CEM.Group.Control$weights)
Control.Base_2014     <- mean(CEM.Group.Control$Base_2014_Total_Costs_capped * CEM.Group.Control$weights)



CEM.Gross.Savings <- (Treatment.Program_2017 - Treatment.Base_2014) - (Control.Program_2017 - Control.Base_2014)



